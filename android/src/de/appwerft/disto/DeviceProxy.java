/**
 * This file was auto-generated by the Titanium Module SDK helper for Android
 * Appcelerator Titanium Mobile
 * Copyright (c) 2009-2017 by Appcelerator, Inc. All Rights Reserved.
 * Licensed under the terms of the Apache Public License
 * Please see the LICENSE included with this distribution for details.
 *
 */
package de.appwerft.disto;

import org.appcelerator.kroll.KrollDict;
import org.appcelerator.kroll.KrollModule;
import org.appcelerator.kroll.KrollProxy;
import org.appcelerator.kroll.annotations.Kroll;
import org.appcelerator.titanium.TiC;
import org.appcelerator.kroll.common.Log;
import org.appcelerator.kroll.common.TiConfig;
import org.appcelerator.titanium.util.TiConvert;
import org.appcelerator.titanium.proxy.TiViewProxy;
import org.appcelerator.titanium.view.TiCompositeLayout;
import org.appcelerator.titanium.view.TiCompositeLayout.LayoutArrangement;
import org.appcelerator.titanium.view.TiUIView;

import ch.leica.sdk.Devices.Device;
import ch.leica.sdk.ErrorHandling.DeviceException;
import android.app.Activity;

// This proxy can be created by calling Tidisto.createExample({message: "hello world"})
@Kroll.proxy(creatableInModule = TidistoModule.class)
public class DeviceProxy extends KrollProxy {
	// Standard Debugging variables
	private static final String LCAT = "ExampleProxy";
	private Device device;

	// Constructor
	public DeviceProxy() {
		super();
	}

	public void handleCreationArgs(KrollModule createdInModule, Object[] args) {
		if (args.length > 0 && args[0] instanceof Device)
			this.device = (Device) args[0];
		super.handleCreationArgs(createdInModule, args);
	}

	// Methods
	@Kroll.method
	public void printMessage(String message) {
		Log.d(LCAT, "printing message: " + message);
	}

	@Kroll.getProperty
	@Kroll.method
	public String getName() {
		return device.getDeviceName();
	}
	@Kroll.getProperty
	@Kroll.method
	public String getId() {
		return device.getDeviceID();
	}
	@Kroll.getProperty
	@Kroll.method
	public KrollDict getAllCharacteristics() {
		KrollDict res = new KrollDict();
		try {
			device.getAllCharacteristics();
		} catch (DeviceException e) {
			e.printStackTrace();
		}
		return res;
	}

}
